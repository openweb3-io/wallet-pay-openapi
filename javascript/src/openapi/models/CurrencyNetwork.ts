/**
 * Wallet-Pay API Documentations
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class CurrencyNetwork {
    /**
    * Currency code
    */
    'code': string;
    /**
    * blockchain network
    */
    'network': string;
    /**
    * Currency name
    */
    'name': string;
    /**
    * Big decimal string representation. The min amount to deposit.
    */
    'minDepositAmount': string;
    /**
    * Big decimal string representation. The min amount to withdraw.
    */
    'minWithdrawAmount': string;
    /**
    * Big decimal string representation. The max amount to withdraw.
    */
    'maxWithdrawAmount': string;
    /**
    * Is it posible to deposit on blockchain
    */
    'canDeposit': boolean;
    /**
    * Is it posible to withdraw to blockchain
    */
    'canWithdraw': boolean;
    /**
    * Is it posible to transfer in custody wallet
    */
    'canTransfer': boolean;
    /**
    * Contract address
    */
    'contractAddress'?: string;
    /**
    * Indicates if additional Memo information is required, as needed by some currencies or exchanges
    */
    'needMemo': boolean;
    /**
    * Minimum transaction fee
    */
    'minFee': string;
    /**
    * Maximum transaction fee
    */
    'maxFee': string;
    /**
    * Minimum transaction fee for contract addresses
    */
    'minFeeForCtAddr': string;
    /**
    * Maximum transaction fee for contract addresses
    */
    'maxFeeForCtAddr': string;
    /**
    * Minimum number of confirmations required, indicating the number of block confirmations needed for a transaction to be considered valid
    */
    'minConfirmations'?: number;
    /**
    * Minimum amount for collection, i.e., the minimum amount to aggregate small balances to a single address
    */
    'minCollectAmount'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "code",
            "baseName": "code",
            "type": "string",
            "format": ""
        },
        {
            "name": "network",
            "baseName": "network",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "minDepositAmount",
            "baseName": "min_deposit_amount",
            "type": "string",
            "format": ""
        },
        {
            "name": "minWithdrawAmount",
            "baseName": "min_withdraw_amount",
            "type": "string",
            "format": ""
        },
        {
            "name": "maxWithdrawAmount",
            "baseName": "max_withdraw_amount",
            "type": "string",
            "format": ""
        },
        {
            "name": "canDeposit",
            "baseName": "can_deposit",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "canWithdraw",
            "baseName": "can_withdraw",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "canTransfer",
            "baseName": "can_transfer",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "contractAddress",
            "baseName": "contract_address",
            "type": "string",
            "format": ""
        },
        {
            "name": "needMemo",
            "baseName": "need_memo",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "minFee",
            "baseName": "min_fee",
            "type": "string",
            "format": ""
        },
        {
            "name": "maxFee",
            "baseName": "max_fee",
            "type": "string",
            "format": ""
        },
        {
            "name": "minFeeForCtAddr",
            "baseName": "min_fee_for_ct_addr",
            "type": "string",
            "format": ""
        },
        {
            "name": "maxFeeForCtAddr",
            "baseName": "max_fee_for_ct_addr",
            "type": "string",
            "format": ""
        },
        {
            "name": "minConfirmations",
            "baseName": "min_confirmations",
            "type": "number",
            "format": ""
        },
        {
            "name": "minCollectAmount",
            "baseName": "min_collect_amount",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CurrencyNetwork.attributeTypeMap;
    }
    
    public constructor() {
    }
}

