/**
 * WalletPay API Documentation
 * This is a custody wallet pay service openapi server.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class TransferRequest {
    /**
    * Amount to transfer, supports decimal values
    */
    'amount': string;
    /**
    * Whether to automatically commit the transfer
    */
    'autoCommit'?: boolean;
    /**
    * Currency code for the transfer (e.g., TON, USDT, ETH)
    */
    'currency': string;
    /**
    * Optional description for the transfer
    */
    'description'?: string;
    /**
    * Optional tags for categorizing the transfer
    */
    'tags'?: Array<string>;
    /**
    * Destination wallet ID to transfer funds to
    */
    'toWalletId': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "amount",
            "baseName": "amount",
            "type": "string",
            "format": ""
        },
        {
            "name": "autoCommit",
            "baseName": "auto_commit",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "toWalletId",
            "baseName": "to_wallet_id",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return TransferRequest.attributeTypeMap;
    }
    
    public constructor() {
    }
}

