/**
 * WalletPay API Documentation
 * This is a custody wallet pay service openapi server.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CurrencyNetwork } from './CurrencyNetwork';
import { HttpFile } from '../http/http';

export class Currency {
    /**
    * Whether on-chain deposits are allowed
    */
    'canDeposit': boolean;
    /**
    * Whether internal transfers are allowed
    */
    'canTransfer': boolean;
    /**
    * Whether on-chain withdrawals are allowed
    */
    'canWithdraw': boolean;
    /**
    * Currency code identifier
    */
    'code': string;
    /**
    * Contract address
    */
    'contractAddress'?: string;
    /**
    * Decimal precision
    */
    'decimals': number;
    /**
    * Logo URL
    */
    'logo': string;
    /**
    * Maximum fee
    */
    'maxFee': string;
    /**
    * Maximum fee for contract address
    */
    'maxFeeForCtAddr': string;
    /**
    * Maximum on-chain withdrawal amount per transaction
    */
    'maxWithdrawAmount': string;
    /**
    * Minimum deposit amount per transaction
    */
    'minDepositAmount': string;
    /**
    * Minimum fee
    */
    'minFee': string;
    /**
    * Minimum fee for contract address
    */
    'minFeeForCtAddr': string;
    /**
    * Minimum on-chain withdrawal amount per transaction
    */
    'minWithdrawAmount': string;
    /**
    * Currency name
    */
    'name': string;
    /**
    * Whether memo is required
    */
    'needMemo': boolean;
    /**
    * Currency networks information
    */
    'networks'?: Array<CurrencyNetwork>;
    /**
    * Number of decimal places
    */
    'precision': number;
    /**
    * Whether it participates in exchange rate calculations
    */
    'rated': boolean;
    /**
    * Currency symbol
    */
    'symbol': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "canDeposit",
            "baseName": "can_deposit",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "canTransfer",
            "baseName": "can_transfer",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "canWithdraw",
            "baseName": "can_withdraw",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "code",
            "baseName": "code",
            "type": "string",
            "format": ""
        },
        {
            "name": "contractAddress",
            "baseName": "contract_address",
            "type": "string",
            "format": ""
        },
        {
            "name": "decimals",
            "baseName": "decimals",
            "type": "number",
            "format": ""
        },
        {
            "name": "logo",
            "baseName": "logo",
            "type": "string",
            "format": ""
        },
        {
            "name": "maxFee",
            "baseName": "max_fee",
            "type": "string",
            "format": ""
        },
        {
            "name": "maxFeeForCtAddr",
            "baseName": "max_fee_for_ct_addr",
            "type": "string",
            "format": ""
        },
        {
            "name": "maxWithdrawAmount",
            "baseName": "max_withdraw_amount",
            "type": "string",
            "format": ""
        },
        {
            "name": "minDepositAmount",
            "baseName": "min_deposit_amount",
            "type": "string",
            "format": ""
        },
        {
            "name": "minFee",
            "baseName": "min_fee",
            "type": "string",
            "format": ""
        },
        {
            "name": "minFeeForCtAddr",
            "baseName": "min_fee_for_ct_addr",
            "type": "string",
            "format": ""
        },
        {
            "name": "minWithdrawAmount",
            "baseName": "min_withdraw_amount",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "needMemo",
            "baseName": "need_memo",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "networks",
            "baseName": "networks",
            "type": "Array<CurrencyNetwork>",
            "format": ""
        },
        {
            "name": "precision",
            "baseName": "precision",
            "type": "number",
            "format": ""
        },
        {
            "name": "rated",
            "baseName": "rated",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "symbol",
            "baseName": "symbol",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Currency.attributeTypeMap;
    }
    
    public constructor() {
    }
}

