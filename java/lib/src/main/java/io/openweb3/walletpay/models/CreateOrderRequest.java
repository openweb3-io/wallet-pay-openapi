/*
 * WalletPay API Documentation
 * This is a custody wallet pay service openapi server.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.openweb3.walletpay.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * CreateOrderRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreateOrderRequest {
  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  private String creator;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_EXPIRATION = "expiration";
  @SerializedName(SERIALIZED_NAME_EXPIRATION)
  private Integer expiration;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Map<String, String> metadata = null;

  public static final String SERIALIZED_NAME_NOTE = "note";
  @SerializedName(SERIALIZED_NAME_NOTE)
  private String note;

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private String uid;


  public CreateOrderRequest amount(String amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Amount, supports decimal values
   * @return amount
  **/
  @ApiModelProperty(required = true, value = "Amount, supports decimal values")

  public String getAmount() {
    return amount;
  }


  public void setAmount(String amount) {
    this.amount = amount;
  }


  public CreateOrderRequest creator(String creator) {
    
    this.creator = creator;
    return this;
  }

   /**
   * The identifier of the user who created the order
   * @return creator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The identifier of the user who created the order")

  public String getCreator() {
    return creator;
  }


  public void setCreator(String creator) {
    this.creator = creator;
  }


  public CreateOrderRequest currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Currency code. e.g.: USDT, TON, ETH
   * @return currency
  **/
  @ApiModelProperty(required = true, value = "Currency code. e.g.: USDT, TON, ETH")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public CreateOrderRequest expiration(Integer expiration) {
    
    this.expiration = expiration;
    return this;
  }

   /**
   * Expiration time in seconds. If payment is not completed within the given time, the order will be automatically canceled
   * @return expiration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Expiration time in seconds. If payment is not completed within the given time, the order will be automatically canceled")

  public Integer getExpiration() {
    return expiration;
  }


  public void setExpiration(Integer expiration) {
    this.expiration = expiration;
  }


  public CreateOrderRequest metadata(Map<String, String> metadata) {
    
    this.metadata = metadata;
    return this;
  }

  public CreateOrderRequest putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Order metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order metadata")

  public Map<String, String> getMetadata() {
    return metadata;
  }


  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }


  public CreateOrderRequest note(String note) {
    
    this.note = note;
    return this;
  }

   /**
   * Order description from merchant
   * @return note
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order description from merchant")

  public String getNote() {
    return note;
  }


  public void setNote(String note) {
    this.note = note;
  }


  public CreateOrderRequest uid(String uid) {
    
    this.uid = uid;
    return this;
  }

   /**
   * External ID, the order ID in the merchant system
   * @return uid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "External ID, the order ID in the merchant system")

  public String getUid() {
    return uid;
  }


  public void setUid(String uid) {
    this.uid = uid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateOrderRequest createOrderRequest = (CreateOrderRequest) o;
    return Objects.equals(this.amount, createOrderRequest.amount) &&
        Objects.equals(this.creator, createOrderRequest.creator) &&
        Objects.equals(this.currency, createOrderRequest.currency) &&
        Objects.equals(this.expiration, createOrderRequest.expiration) &&
        Objects.equals(this.metadata, createOrderRequest.metadata) &&
        Objects.equals(this.note, createOrderRequest.note) &&
        Objects.equals(this.uid, createOrderRequest.uid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, creator, currency, expiration, metadata, note, uid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateOrderRequest {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

