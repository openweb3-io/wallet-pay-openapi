/*
 * Wallet-Pay API Documentations
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.openweb3.walletpay.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * EstimateData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-25T00:51:31.435994+08:00[Asia/Shanghai]")
public class EstimateData {
  public static final String SERIALIZED_NAME_FROM = "from";
  @SerializedName(SERIALIZED_NAME_FROM)
  private String from;

  public static final String SERIALIZED_NAME_BASE_AMOUNT = "base_amount";
  @SerializedName(SERIALIZED_NAME_BASE_AMOUNT)
  private Integer baseAmount;

  public static final String SERIALIZED_NAME_TO_CURRENCY = "to_currency";
  @SerializedName(SERIALIZED_NAME_TO_CURRENCY)
  private String toCurrency;

  public static final String SERIALIZED_NAME_TO_AMOUNT = "to_amount";
  @SerializedName(SERIALIZED_NAME_TO_AMOUNT)
  private Integer toAmount;

  public static final String SERIALIZED_NAME_RATE = "rate";
  @SerializedName(SERIALIZED_NAME_RATE)
  private BigDecimal rate;


  public EstimateData from(String from) {
    
    this.from = from;
    return this;
  }

   /**
   * The base currency.
   * @return from
  **/
  @ApiModelProperty(example = "TON", required = true, value = "The base currency.")

  public String getFrom() {
    return from;
  }


  public void setFrom(String from) {
    this.from = from;
  }


  public EstimateData baseAmount(Integer baseAmount) {
    
    this.baseAmount = baseAmount;
    return this;
  }

   /**
   * The base currency amount.
   * @return baseAmount
  **/
  @ApiModelProperty(example = "6", required = true, value = "The base currency amount.")

  public Integer getBaseAmount() {
    return baseAmount;
  }


  public void setBaseAmount(Integer baseAmount) {
    this.baseAmount = baseAmount;
  }


  public EstimateData toCurrency(String toCurrency) {
    
    this.toCurrency = toCurrency;
    return this;
  }

   /**
   * The target currency
   * @return toCurrency
  **/
  @ApiModelProperty(example = "NOT", required = true, value = "The target currency")

  public String getToCurrency() {
    return toCurrency;
  }


  public void setToCurrency(String toCurrency) {
    this.toCurrency = toCurrency;
  }


  public EstimateData toAmount(Integer toAmount) {
    
    this.toAmount = toAmount;
    return this;
  }

   /**
   * The estimated amount in the target currency
   * @return toAmount
  **/
  @ApiModelProperty(required = true, value = "The estimated amount in the target currency")

  public Integer getToAmount() {
    return toAmount;
  }


  public void setToAmount(Integer toAmount) {
    this.toAmount = toAmount;
  }


  public EstimateData rate(BigDecimal rate) {
    
    this.rate = rate;
    return this;
  }

   /**
   * The conversion rate from the base currency to the target currency.
   * @return rate
  **/
  @ApiModelProperty(example = "6.78", required = true, value = "The conversion rate from the base currency to the target currency.")

  public BigDecimal getRate() {
    return rate;
  }


  public void setRate(BigDecimal rate) {
    this.rate = rate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EstimateData estimateData = (EstimateData) o;
    return Objects.equals(this.from, estimateData.from) &&
        Objects.equals(this.baseAmount, estimateData.baseAmount) &&
        Objects.equals(this.toCurrency, estimateData.toCurrency) &&
        Objects.equals(this.toAmount, estimateData.toAmount) &&
        Objects.equals(this.rate, estimateData.rate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(from, baseAmount, toCurrency, toAmount, rate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EstimateData {\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    baseAmount: ").append(toIndentedString(baseAmount)).append("\n");
    sb.append("    toCurrency: ").append(toIndentedString(toCurrency)).append("\n");
    sb.append("    toAmount: ").append(toIndentedString(toAmount)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

