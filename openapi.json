{
    "openapi": "3.0.2",
    "info": {
        "title": "Wallet-Pay API Documentations",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://api.wallet-pay.openweb3.io"
        }
    ],
    "security": [
        {
            "ApiKeyAuth": []
        }
    ],
    "x-readme": {
        "samples-languages": [
            "python",
            "node",
            "csharp",
            "java",
            "go",
            "kotlin",
            "ruby",
            "rust",
            "java",
            "shell"
        ],
        "parameter-ordering": [
            "path", 
            "query", 
            "header", 
            "cookie", 
            "body", 
            "form"
        ]
    },
    "paths":
      {        
        "/api/v1/apps/{appId}/currencies": {
            "get": {
                "description": "List currencies.",
                "operationId": "v1.currency.list",
                "parameters": [
                    {
                        "description": "Specified the app id.",
                        "in": "path",
                        "name": "appId",
                        "required": true,
                        "schema": {
                            "description": "Specified the app id.",
                            "example": "app_12345xsfei",
                            "type": "string"
                        },
                        "style": "simple"
                    },
                    {
                        "description": "Limit the number of returned items",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "description": "Limit the number of returned items",
                            "format": "uint64",
                            "minimum": 0,
                            "default": 20,
                            "example": 100,
                            "type": "integer"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Specifying the start cursor position",
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "description": "Specifying the start cursor position",
                            "type": "string"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Specifying if currency supports fetching rates",
                        "in": "query",
                        "name": "rated",
                        "schema": {
                            "description": "Specifying if currency supports fetching rates",
                            "example": true,
                            "type": "boolean"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseListCurrencyOut"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "List currencies",
                "tags": [
                    "Currency"
                ]
            }
        },
        "/api/v1/apps/{appId}/currencies/{code}": {
            "get": {
                "description": "Get specified currency.",
                "operationId": "v1.currency.findByCode",
                "parameters": [
                    {
                        "description": "Specified the app id.",
                        "in": "path",
                        "name": "appId",
                        "required": true,
                        "schema": {
                            "description": "Specified the app id.",
                            "example": "app_12345xsfei",
                            "type": "string"
                        },
                        "style": "simple"
                    },
                    {
                        "description": "Specified currency code.",
                        "in": "path",
                        "name": "code",
                        "required": true,
                        "schema": {
                            "description": "Specified currency code.",
                            "example": "USDT",
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseCurrencyOut"
                                }
                            }
                        },
                        "description": ""
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseCurrencyOut"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Find currency by code",
                "tags": [
                    "Currency"
                ]
            }
        },        
        "/api/v1/apps/{appId}/transfers": {
            "post": {
                "description": "Create a new transfer.",
                "operationId": "v1.transfer.create",
                "parameters": [
                    {
                        "description": "Specified the app id.",
                        "in": "path",
                        "name": "appId",
                        "required": true,
                        "schema": {
                            "description": "Specified the app id.",
                            "example": "app_12345xsfei",
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransferIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseTransferOut"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseTransferOut"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Too Many Requests"
                    }
                },
                "summary": "Create Transfer",
                "tags": [
                    "Transfer"
                ],
                "x-readme": {
                    "code-samples": []
                }
            }
        },        
        "/api/v1/apps/{appId}/refunds": {
            "get": {
                "description": "List refunds.",
                "operationId": "v1.refund.list",
                "parameters": [
                    {
                        "description": "Specified the app id.",
                        "in": "path",
                        "name": "appId",
                        "required": true,
                        "schema": {
                            "description": "Specified the app id.",
                            "example": "app_12345xsfei",
                            "type": "string"
                        },
                        "style": "simple"
                    },
                    {
                        "description": "Limit the number of returned items",
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "description": "Limit the number of returned items",
                            "format": "uint64",
                            "minimum": 0,
                            "default": 20,
                            "example": 100,
                            "type": "integer"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Specifying the page index",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "description": "Specifying the page index",
                            "example": 0,
                            "default": 0,
                            "type": "integer"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Optional order id",
                        "in": "query",
                        "name": "order_id",
                        "schema": {
                            "description": "Optional order id",
                            "example": "923be366-51d1-447f-a0e8-db4c75dffae5",
                            "type": "string",
                            "nullable": true
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseListRefundOut"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "List Refunds",
                "tags": [
                    "Refund"
                ]
            },
            "post": {
                "description": "Create a refund.",
                "operationId": "v1.refund.create",
                "parameters": [
                    {
                        "description": "Specified the app id.",
                        "in": "path",
                        "name": "appId",
                        "required": true,
                        "schema": {
                            "description": "Specified the app id.",
                            "example": "app_12345xsfei",
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefundIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseRefundOut"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseRefundOut"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Too Many Requests"
                    }
                },
                "summary": "Create Refund",
                "tags": [
                    "Refund"
                ],
                "x-readme": {
                    "code-samples": []
                }
            }
        },        
        "/api/v1/apps/{appId}/refunds/{idOrUid}": {
            "get": {
                "description": "Get specified refund.",
                "operationId": "v1.refund.get",
                "parameters": [
                    {
                        "description": "Specified the app id.",
                        "in": "path",
                        "name": "appId",
                        "required": true,
                        "schema": {
                            "description": "Specified the app id.",
                            "example": "app_12345xsfei",
                            "type": "string"
                        },
                        "style": "simple"
                    },
                    {
                        "description": "Specified the refund id or refund uid.",
                        "in": "path",
                        "name": "idOrUid",
                        "required": true,
                        "schema": {
                            "description": "Specified the refund id or refund uid.",
                            "example": "11b9ca57-0559-403a-bf8e-7bd1a31aff45",
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseRefundOut"
                                }
                            }
                        },
                        "description": ""
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseRefundOut"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get Refund",
                "tags": [
                    "Refund"
                ]
            }
        },
        "/api/v1/apps/{appId}/orders": {
            "get": {
                "description": "List orders.",
                "operationId": "v1.order.list",
                "parameters": [
                    {
                        "description": "Specified the app id.",
                        "in": "path",
                        "name": "appId",
                        "required": true,
                        "schema": {
                            "description": "Specified the app id.",
                            "example": "app_12345xsfei",
                            "type": "string"
                        },
                        "style": "simple"
                    },
                    {
                        "description": "Limit the number of returned items",
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "description": "Limit the number of returned items",
                            "format": "uint64",
                            "minimum": 0,
                            "default": 20,
                            "example": 100,
                            "type": "integer"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Specifying the page index",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "description": "Specifying the page index",
                            "example": 0,
                            "default": 0,
                            "type": "integer"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Optional wallet id",
                        "in": "query",
                        "name": "wallet_id",
                        "schema": {
                            "description": "Optional wallet id",
                            "example": "wallet_id",
                            "type": "string",
                            "nullable": true
                        },
                        "style": "form"
                    },
                    {
                        "description": "Optional account id",
                        "in": "query",
                        "name": "account_id",
                        "schema": {
                            "description": "Optional account id",
                            "example": "account_id",
                            "type": "string",
                            "nullable": true
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseListOrderOut"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "List Orders",
                "tags": [
                    "Order"
                ]
            },
            "post": {
                "description": "Create a new order.",
                "operationId": "v1.order.create",
                "parameters": [
                    {
                        "description": "Specified the app id.",
                        "in": "path",
                        "name": "appId",
                        "required": true,
                        "schema": {
                            "description": "Specified the app id.",
                            "example": "app_12345xsfei",
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseOrderOut"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseOrderOut"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Too Many Requests"
                    }
                },
                "summary": "Create Order",
                "tags": [
                    "Order"
                ],
                "x-readme": {
                    "code-samples": []
                }
            }
        },
        "/api/v1/apps/{appId}/orders/{idOrUid}": {
            "get": {
                "description": "Get specified order.",
                "operationId": "v1.order.get",
                "parameters": [
                    {
                        "description": "Specified the app id.",
                        "in": "path",
                        "name": "appId",
                        "required": true,
                        "schema": {
                            "description": "Specified the app id.",
                            "example": "app_12345xsfei",
                            "type": "string"
                        },
                        "style": "simple"
                    },
                    {
                        "description": "Specified the order id or order uid.",
                        "in": "path",
                        "name": "idOrUid",
                        "required": true,
                        "schema": {
                            "description": "Specified the order id or order uid.",
                            "example": "11b9ca57-0559-403a-bf8e-7bd1a31aff45",
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseOrderOut"
                                }
                            }
                        },
                        "description": ""
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseOrderOut"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get order",
                "tags": [
                    "Order"
                ]
            }
        },
        "/api/v1/apps/{appId}/webhooks/endpoints" : {
            "get": {
                "description": "List endpoints.",
                "operationId": "v1.endpoint.list",
                "parameters": [
                    {
                        "description": "Specified the app id.",
                        "in": "path",
                        "name": "appId",
                        "required": true,
                        "schema": {
                            "description": "Specified the app id.",
                            "example": "app_12345xsfei",
                            "type": "string"
                        },
                        "style": "simple"
                    },
                    {
                        "description": "Limit the number of returned items",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "description": "Limit the number of returned items",
                            "format": "uint64",
                            "minimum": 0,
                            "default": 20,
                            "example": 100,
                            "type": "integer"
                        },
                        "style": "form"
                    },
                    {
                        "description": "Specifying the start cursor position",
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "description": "Specifying the start cursor position",
                            "type": "string"
                        },
                        "style": "form"
                    },
                    {
                        "description": "The sorting order of the returned items",
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "$ref": "#/components/schemas/Ordering",
                            "description": "The sorting order of the returned items",
                            "nullable": true
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseListEndpointOut"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Too Many Requests"
                    }
                },
                "summary": "List endpoints",
                "tags": [
                    "Webhook Endpoint"
                ]
            },
            "post": {
                "description": "Create a webhook endpoint.",
                "operationId": "v1.endpoint.create",
                "parameters": [
                    {
                        "description": "Specified the app id.",
                        "in": "path",
                        "name": "appId",
                        "required": true,
                        "schema": {
                            "description": "Specified the app id.",
                            "example": "app_12345xsfei",
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseEndpointOut"
                                }
                            }
                        },
                        "description": ""
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseEndpointOut"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create endpoint",
                "tags": [
                    "Webhook Endpoint"
                ],
                "x-readme": {
                    "code-samples": []
                }
            }
        },
        "/api/v1/apps/{appId}/webhooks/endpoints/{endpointId}": {          
            "delete": {
                "description": "delete the specified webhook endpoint.",
                "operationId": "v1.endpoint.delete",
                "parameters": [
                    {
                        "description": "Specified the app id.",
                        "in": "path",
                        "name": "appId",
                        "required": true,
                        "schema": {
                            "description": "Specified the app id.",
                            "example": "app_12345xsfei",
                            "type": "string"
                        },
                        "style": "simple"
                    },
                    {
                        "description": "Specified the endpoint id.",
                        "in": "path",
                        "name": "endpointId",
                        "required": true,
                        "schema": {
                            "description": "Specified the endpoint id.",
                            "example": "wb_12345xsfei",
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseEndpointOut"
                                }
                            }
                        },
                        "description": ""
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseEndpointOut"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete endpoint",
                "tags": [
                    "Webhook Endpoint"
                ]
            },        
            "get": {
                "description": "get the specified webhook endpoint.",
                "operationId": "v1.endpoint.get",
                "parameters": [
                    {
                        "description": "Specified the app id.",
                        "in": "path",
                        "name": "appId",
                        "required": true,
                        "schema": {
                            "description": "Specified the app id.",
                            "example": "app_12345xsfei",
                            "type": "string"
                        },
                        "style": "simple"
                    },
                    {
                        "description": "Specified the endpoint id or endpoint uid.",
                        "in": "path",
                        "name": "endpointId",
                        "required": true,
                        "schema": {
                            "description": "Specified the endpoint id.",
                            "example": "wb_12345xsfei",
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseEndpointOut"
                                }
                            }
                        },
                        "description": ""
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseEndpointOut"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseError"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete endpoint",
                "tags": [
                    "Webhook Endpoint"
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ResponseError": {
                "properties": {
                    "msg": {
                        "type": "string"
                    },
                    "code": {
                        "type": "integer"
                    }
                },
                "required": [
                    "code",
                    "msg"
                ],
                "title": "ResponseError",
                "type": "object"
            },
            "Ordering": {
                "description": "Defines the ordering in a listing of results.",
                "enum": [
                    "asc",
                    "desc"
                ],
                "type": "string"
            },
            "WebhookMessage": {
                "description": "The request body of the webhook POST request.",
                "properties": {
                    "event_type": {
                        "description": "Message event type",
                        "type": "string",
                        "example": "order_paid",
                        "maxLength": 256,
                        "minLength": 1
                    },
                    "payload": {
                        "$ref": "#/components/schemas/OrderOut"
                    }
                }
            },
            "ResponseCurrencyOut": {
                "properties":{
                    "data": {
                        "description": "The currency info data",
                        "$ref": "#/components/schemas/CurrencyOut"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "ResponseCurrencyOut",
                "type": "object"
            },
            "CurrencyOut": {
                "properties": {
                    "code": {
                        "description": "Currency code",
                        "example": "USDT",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string" 
                    },
                    "symbol": {
                        "description": "Currency symbol",
                        "example": "USDT",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "logo": {
                        "description": "Currency logo url",
                        "example": "http://logo.jpg",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "description": "Currency name",
                        "example": "USDT",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "can_deposit": {
                        "description": "Is it posible to deposit on blockchain",
                        "example": "false",
                        "type": "boolean" 
                    },
                    "can_withdraw": {
                        "description": "Is it posible to withdraw to blockchain",
                        "example": "false",
                        "type": "boolean" 
                    },
                    "can_transfer": {
                        "description": "Is it posible to transfer in custody wallet",
                        "example": "false",
                        "type": "boolean" 
                    },
                    "min_deposit_amount": {
                        "description": "Big decimal string representation. The min amount to deposit.",
                        "example": "0.0012345",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string" 
                    },
                    "min_withdraw_amount": {
                        "description": "Big decimal string representation. The min amount to withdraw.",
                        "example": "0.0012345",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string" 
                    },
                    "max_withdraw_amount": {
                        "description": "Big decimal string representation. The max amount to withdraw.",
                        "example": "0.0012345",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string" 
                    },
                    "precision": {
                        "description": "Currency precision",
                        "example": 6,
                        "type": "integer"

                    },
                    "decimals": {
                        "description": "Currency decimals",
                        "example": 12,
                        "type": "integer"
                    }
                },
                "required": [
                    "code",
                    "symbol",
                    "logo",
                    "name",
                    "can_deposit",
                    "can_withdraw",
                    "can_transfer",
                    "min_deposit_amount",
                    "min_withdraw_amount",
                    "max_withdraw_amount",
                    "precision",
                    "decimals"
                ],
                "type": "object"
            },
            "ListResponse_CurrencyOut_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/CurrencyOut"
                        },
                        "type": "array"
                    },
                    "next_cursor": {
                        "type": "string"
                    },
                    "prev_cursor": {
                        "type": "string"
                    },
                    "has_next": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "items"
                ],
                "type": "object"
            },
            "ResponseListCurrencyOut": {
                "properties":{
                    "data": {
                        "description": "The currency list",
                        "$ref": "#/components/schemas/ListResponse_CurrencyOut_"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "ResponseEndpointOut",
                "type": "object"
            },
            "TransferIn": {
                "properties": {
                    "to_wallet_id": {
                        "description": "the target wallet id",
                        "example": "7e5c8e13-0573-472e-9e34-fe779c618fcf",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9\\-_.]+$",
                        "type": "string"
                    },
                    "currency": {
                        "description": "currency code",
                        "example": "USDT",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "amount": {
                        "description": "big integer string representation",
                        "example": "10000",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "auto_commit": {
                        "description": "auto commit, default is true",
                        "example": "true",
                        "type": "boolean"
                    },
                    "description": {
                        "description": "transfer description",
                        "example": "Distribute prizes",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "tags": {
                        "description": "transfer tags",
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "nullable": true
                    }
                },
                "required": [
                    "to_wallet_id",
                    "currency",
                    "amount"
                ],
                "type": "object"
            },
            "TransferOut": {
                "properties": {
                    "transfer_id": {
                        "description": "the transfer id",
                        "example": "7e5c8e13-0573-472e-9e34-fe779c618fcf",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9\\-_.]+$",
                        "type": "string"
                    }
                },
                "required": [
                    "transfer_id"
                ],
                "type": "object"
            },
            "ResponseTransferOut": {
                "properties":{
                    "data": {
                        "description": "The transfer result data",
                        "$ref": "#/components/schemas/TransferOut"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "ResponseTransferOut",
                "type": "object"
            },
            "RefundIn": {
                "properties": {
                    "uid": {
                        "description": "Optional unique identifier for the refund",
                        "example": "unique-identifier",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9\\-_.]+$",
                        "type": "string"
                    },
                    "order_id": {
                        "description": "The order's ID",
                        "example": "fdcefb20-1994-417a-8c6a-0648b841c266",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9\\-_.]+$",
                        "type": "string"
                    },
                    "amount": {
                        "description": "Big integer string representation, whose meaning is the value of absolute floating-point number multiplied by the corresponding decimals of the cryptocurrency.",
                        "example": "123450000",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "note": {
                        "description": "Optional refund note",
                        "example": "note example",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "order_id",
                    "amount"
                ],
                "type": "object"
            },
            "RefundOut": {
                "properties": {
                    "id": {
                        "description": "The refund's ID",
                        "example": "fdcefb20-1994-417a-8c6a-0648b841c266",
                        "type": "string"
                    },
                    "uid": {
                        "description": "The refund's UID",
                        "example": "unique-identifier",
                        "maxLength": 256,
                        "minLength": 1,
                        "nullable": true,
                        "pattern": "^[a-zA-Z0-9\\-_.]+$",
                        "type": "string"
                    },
                    "order_id": {
                        "description": "The relative order id",
                        "example": "fdcefb20-1994-417a-8c6a-0648b841c266",
                        "type": "string"
                    },
                    "currency": {
                        "description": "Currency code",
                        "example": "USDT",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "amount": {
                        "description": "Big integer string representation, whose meaning is the value of absolute floating-point number multiplied by the corresponding decimals of the cryptocurrency.",
                        "example": "12345000",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": ["PENDING", "FAILED", "COMPLETED"],
                        "description": "The refund's status"
                    },
                    "note": {
                        "description": "Optional refund note",
                        "example": "note example",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "failed_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The refund's failure time"
                    },
                    "failed_message": {
                        "type": "string",
                        "description": "The message when refund failed"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The refund's created time"
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The refund's completed time"
                    }
                },
                "required": [
                    "id",
                    "order_id",
                    "currency",
                    "amount",
                    "status",
                    "created_at"
                ],
                "type": "object"
            },
            "ListResponse_RefundOut_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/RefundOut"
                        },
                        "type": "array"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "required": [
                    "items"
                ],
                "type": "object"
            },
            "ResponseRefundOut": {
                "properties":{
                    "data": {
                        "description": "The refund info data",
                        "$ref": "#/components/schemas/RefundOut"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "ResponseRefundOut",
                "type": "object"
            },
            "ResponseListRefundOut": {
                "properties":{
                    "data": {
                        "description": "The refund list",
                        "$ref": "#/components/schemas/ListResponse_RefundOut_"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "ResponseListRefundOut",
                "type": "object"
            },
            "OrderIn": {
                "properties": {
                    "uid": {
                        "description": "Optional unique identifier for the order",
                        "example": "unique-order-identifier",
                        "maxLength": 256,
                        "minLength": 1,
                        "nullable": true,
                        "pattern": "^[a-zA-Z0-9\\-_.]+$",
                        "type": "string"
                    },
                    "currency": {
                        "description": "Currency code",
                        "example": "USDT",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "amount": {
                        "description": "Big integer string representation, whose meaning is the value of absolute floating-point number multiplied by the corresponding decimals of the cryptocurrency.",
                        "example": "0.0012345",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "note": {
                        "description": "Optional order note",
                        "example": "note example",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "default": {},
                        "type": "object",
                        "nullable": true,
                        "description": "Optional metadata"
                    },
                    "expiration": {
                        "description": "The expiration seconds",
                        "example": "600",
                        "type": "integer"
                    }
                },
                "required": [
                    "currency",
                    "amount"
                ],
                "type": "object"
            },
            "OrderOut": {
                "properties": {
                    "id": {
                        "description": "The order's ID",
                        "example": "1brOrx2ZWZBpBUvZwXKQmoEYga2",
                        "type": "string"
                    },
                    "uid": {
                        "description": "The order's UID",
                        "example": "unique-order-identifier",
                        "maxLength": 256,
                        "minLength": 1,
                        "nullable": true,
                        "pattern": "^[a-zA-Z0-9\\-_.]+$",
                        "type": "string"
                    },
                    "currency": {
                        "description": "Currency code",
                        "example": "USDT",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "amount": {
                        "description": "Big integer string representation, whose meaning is the value of absolute floating-point number multiplied by the corresponding decimals of the cryptocurrency.",
                        "example": "1",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "The order's creator",
                        "nullable": true
                    },
                    "wallet_id": {
                        "description": "wallet id",
                        "example": "wallet_id",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "note": {
                        "description": "Optional order notes",
                        "example": "note example",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "expiration": {
                        "description": "The expiration seconds",
                        "example": "600",
                        "type": "integer"
                    },
                    "status": {
                        "type": "string",
                        "enum": ["PENDING", "PAID", "FAILED", "EXPIRED", "COMPLETED"],
                        "description": "The order's status"
                    },
                    "failed_message": {
                        "type": "string",
                        "description": "The message when order failed"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The order's creation time"
                    },
                    "payed_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The order's paid time"
                    },
                    "expired_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The order's expiration time"
                    },
                    "failed_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The order's failure time"
                    }
                },
                "required": [
                    "id",
                    "currency",
                    "amount",
                    "status",
                    "created_at"
                ],
                "type": "object"
            },
            "ListResponse_OrderOut_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/OrderOut"
                        },
                        "type": "array"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "required": [
                    "items"
                ],
                "type": "object"
            },
            "ResponseOrderOut": {
                "properties":{
                    "data": {
                        "description": "The order info data",
                        "$ref": "#/components/schemas/OrderOut"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "ResponseOrderOut",
                "type": "object"
            },
            "ResponseListOrderOut": {
                "properties":{
                    "data": {
                        "description": "The order list",
                        "$ref": "#/components/schemas/ListResponse_OrderOut_"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "ResponseListOrderOut",
                "type": "object"
            },
            "EndpointIn": {
                "properties": {
                    "uid": {
                        "description": "Optional unique identifier for the endpoint",
                        "example": "unique-endpoint-identifier",
                        "maxLength": 256,
                        "minLength": 1,
                        "nullable": true,
                        "pattern": "^[a-zA-Z0-9\\-_.]+$",
                        "type": "string"
                    },
                    "filter_types": {
                        "description": "The webhook endpoint expected event types",
                        "example": [
                            "order_expired"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "url": {
                        "description": "The webhook endpoint url",
                        "example": "http://example.com/endpoint",
                        "type": "string"
                    },
                    "disabled":{
                        "description": "indicate whether to disable the webhook endpoint",
                        "example": "false",
                        "type": "boolean"
                    },
                    "metadata": {
                        "additionalProperties": {
                        },
                        "default": {},
                        "type": "object",
                        "nullable": true,
                        "description": "Optional metadata",
                        "example": {
                            "node": "http://dashboard.com/node1",
                            "tag": "node"
                        }
                    },
                    "headers": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "default": {},
                        "type": "object",
                        "nullable": true,
                        "description": "Optional headers",
                        "example": {
                            "x-user-id": "user1",
                            "x-org-id": "org_xdwfeees1xfeg"
                        }
                    },
                    "description": {
                        "description": "The endpoint's description",
                        "example": "The description for endpoint",
                        "type": "string"
                    }
                },
                "required": [
                    "url",
                    "filter_types"
                ],
                "type": "object"
            },
            "EndpointOut": {
                "properties": {
                    "id": {
                        "description": "The order's ID",
                        "example": "1brOrx2ZWZBpBUvZwXKQmoEYga2",
                        "type": "string"
                    },
                    "uid": {
                        "description": "Optional unique identifier for the endpoint",
                        "example": "unique-endpoint-identifier",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9\\-_.]+$",
                        "type": "string"
                    },
                    "description": {
                        "description": "The endpoint's description",
                        "example": "The description for endpoint",
                        "type": "string"
                    },
                    "url": {
                        "description": "The webhook endpoint url",
                        "example": "http://example.com/endpoint",
                        "type": "string"
                    },
                    "filter_types": {
                        "description": "The webhook endpoint expected event types",
                        "example": [
                            "order_expired"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "disabled":{
                        "description": "indicate whether to disable the webhook endpoint",
                        "example": "false",
                        "type": "boolean"
                    },
                    "metadata": {
                        "additionalProperties": {
                        },
                        "default": {},
                        "type": "object",
                        "nullable": true,
                        "description": "Optional metadata",
                        "example": {
                            "node": "http://dashboard.com/node1",
                            "tag": "node"
                        }
                    },
                    "headers": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "default": {},
                        "nullable": true,
                        "type": "object",
                        "description": "Optional headers",
                        "example": {
                            "x-user-id": "user1",
                            "x-org-id": "org_xdwfeees1xfeg"
                        }
                    }
                },
                "required": [
                    "id",
                    "url",
                    "filter_types"
                ],
                "type": "object"
            },
            "ListResponse_EndpointOut_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/EndpointOut"
                        },
                        "type": "array"
                    },
                    "prev_cursor": {
                        "type": "string"
                    },
                    "next_cursor": {
                        "type": "string"
                    },
                    "has_next": {
                        "type":"boolean"
                    }
                },
                "required": [
                    "items"
                ],
                "type": "object"
            },
            "ResponseEndpointOut": {
                "properties":{
                    "data": {
                        "description": "The webhook endpoint info data",
                        "$ref": "#/components/schemas/EndpointOut"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "ResponseEndpointOut",
                "type": "object"
            },
            "ResponseListEndpointOut": {
                "properties":{
                    "data": {
                        "description": "The webhook endpoint list",
                        "$ref": "#/components/schemas/ListResponse_EndpointOut_"
                    }
                },
                "required": [
                    "data"
                ],
                "title": "ResponseListEndpointOut",
                "type": "object"
            }
        },
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "x-api-key"
            }
        }
    }
}
