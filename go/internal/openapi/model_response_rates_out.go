/*
 * Wallet-Pay API Documentations
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResponseRatesOut struct for ResponseRatesOut
type ResponseRatesOut struct {
	Data RatesOut `json:"data"`
}

// NewResponseRatesOut instantiates a new ResponseRatesOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseRatesOut(data RatesOut) *ResponseRatesOut {
	this := ResponseRatesOut{}
	this.Data = data
	return &this
}

// NewResponseRatesOutWithDefaults instantiates a new ResponseRatesOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseRatesOutWithDefaults() *ResponseRatesOut {
	this := ResponseRatesOut{}
	return &this
}

// GetData returns the Data field value
func (o *ResponseRatesOut) GetData() RatesOut {
	if o == nil {
		var ret RatesOut
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ResponseRatesOut) GetDataOk() (*RatesOut, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ResponseRatesOut) SetData(v RatesOut) {
	o.Data = v
}

func (o ResponseRatesOut) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableResponseRatesOut struct {
	value *ResponseRatesOut
	isSet bool
}

func (v NullableResponseRatesOut) Get() *ResponseRatesOut {
	return v.value
}

func (v *NullableResponseRatesOut) Set(val *ResponseRatesOut) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseRatesOut) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseRatesOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseRatesOut(val *ResponseRatesOut) *NullableResponseRatesOut {
	return &NullableResponseRatesOut{value: val, isSet: true}
}

func (v NullableResponseRatesOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseRatesOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


