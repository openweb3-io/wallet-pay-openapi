/*
 * Wallet-Pay API Documentations
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TransferOut struct for TransferOut
type TransferOut struct {
	// the transfer id
	TransferId string `json:"transfer_id"`
}

// NewTransferOut instantiates a new TransferOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferOut(transferId string) *TransferOut {
	this := TransferOut{}
	this.TransferId = transferId
	return &this
}

// NewTransferOutWithDefaults instantiates a new TransferOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferOutWithDefaults() *TransferOut {
	this := TransferOut{}
	return &this
}

// GetTransferId returns the TransferId field value
func (o *TransferOut) GetTransferId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransferId
}

// GetTransferIdOk returns a tuple with the TransferId field value
// and a boolean to check if the value has been set.
func (o *TransferOut) GetTransferIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransferId, true
}

// SetTransferId sets field value
func (o *TransferOut) SetTransferId(v string) {
	o.TransferId = v
}

func (o TransferOut) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["transfer_id"] = o.TransferId
	}
	return json.Marshal(toSerialize)
}

type NullableTransferOut struct {
	value *TransferOut
	isSet bool
}

func (v NullableTransferOut) Get() *TransferOut {
	return v.value
}

func (v *NullableTransferOut) Set(val *TransferOut) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferOut) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferOut(val *TransferOut) *NullableTransferOut {
	return &NullableTransferOut{value: val, isSet: true}
}

func (v NullableTransferOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


