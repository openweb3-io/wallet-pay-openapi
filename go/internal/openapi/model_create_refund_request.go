/*
 * WalletPay API Documentation
 *
 * This is a custody wallet pay service openapi server.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateRefundRequest struct for CreateRefundRequest
type CreateRefundRequest struct {
	// Amount to refund
	Amount string `json:"amount"`
	// Refund description from merchant
	Note *string `json:"note,omitempty"`
	// ID of the order to be refunded
	OrderId string `json:"order_id"`
	// External ID, the refund ID in the merchant system
	Uid *string `json:"uid,omitempty"`
}

// NewCreateRefundRequest instantiates a new CreateRefundRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRefundRequest(amount string, orderId string) *CreateRefundRequest {
	this := CreateRefundRequest{}
	this.Amount = amount
	this.OrderId = orderId
	return &this
}

// NewCreateRefundRequestWithDefaults instantiates a new CreateRefundRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRefundRequestWithDefaults() *CreateRefundRequest {
	this := CreateRefundRequest{}
	return &this
}

// GetAmount returns the Amount field value
func (o *CreateRefundRequest) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *CreateRefundRequest) GetAmountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *CreateRefundRequest) SetAmount(v string) {
	o.Amount = v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *CreateRefundRequest) GetNote() string {
	if o == nil || o.Note == nil {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRefundRequest) GetNoteOk() (*string, bool) {
	if o == nil || o.Note == nil {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *CreateRefundRequest) HasNote() bool {
	if o != nil && o.Note != nil {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *CreateRefundRequest) SetNote(v string) {
	o.Note = &v
}

// GetOrderId returns the OrderId field value
func (o *CreateRefundRequest) GetOrderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *CreateRefundRequest) GetOrderIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *CreateRefundRequest) SetOrderId(v string) {
	o.OrderId = v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *CreateRefundRequest) GetUid() string {
	if o == nil || o.Uid == nil {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRefundRequest) GetUidOk() (*string, bool) {
	if o == nil || o.Uid == nil {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *CreateRefundRequest) HasUid() bool {
	if o != nil && o.Uid != nil {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *CreateRefundRequest) SetUid(v string) {
	o.Uid = &v
}

func (o CreateRefundRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if o.Note != nil {
		toSerialize["note"] = o.Note
	}
	if true {
		toSerialize["order_id"] = o.OrderId
	}
	if o.Uid != nil {
		toSerialize["uid"] = o.Uid
	}
	return json.Marshal(toSerialize)
}

type NullableCreateRefundRequest struct {
	value *CreateRefundRequest
	isSet bool
}

func (v NullableCreateRefundRequest) Get() *CreateRefundRequest {
	return v.value
}

func (v *NullableCreateRefundRequest) Set(val *CreateRefundRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRefundRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRefundRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRefundRequest(val *CreateRefundRequest) *NullableCreateRefundRequest {
	return &NullableCreateRefundRequest{value: val, isSet: true}
}

func (v NullableCreateRefundRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRefundRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


