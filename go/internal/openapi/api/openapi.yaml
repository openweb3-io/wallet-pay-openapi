openapi: 3.0.2
info:
  description: This is a custody wallet pay service openapi server.
  title: WalletPay API Documentation
  version: "1.0"
externalDocs: {}
servers:
- description: WalletPay OpenAPI Server
  url: https://api.wallet-pay.openweb3.io
paths:
  /api/v1/currencies:
    get:
      description: Retrieve a list of all available currencies.
      operationId: v1.currencies.list
      parameters:
      - description: Filter currencies by rated status
        explode: true
        in: query
        name: rated
        required: false
        schema:
          description: Filter currencies by rated status
          type: boolean
        style: form
      - description: Pagination cursor for fetching next page
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          description: Pagination cursor for fetching next page
          type: string
        style: form
      - description: Number of records to return per page
        explode: true
        in: query
        name: limit
        required: true
        schema:
          description: Number of records to return per page
          type: integer
        style: form
      - description: Filter currencies by application ID
        explode: true
        in: query
        name: app_id
        required: false
        schema:
          description: Filter currencies by application ID
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Currency'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: List currencies
      tags:
      - currencies
  /api/v1/currencies/{code}:
    get:
      description: Get currency info by currency code
      operationId: v1.currencies.retrieve
      parameters:
      - description: Currency code
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Currency'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Currency
      tags:
      - currencies
  /api/v1/orders:
    get:
      description: Retrieve a list of orders with pagination
      operationId: v1.orders.list
      parameters:
      - description: Filter orders by wallet ID
        explode: true
        in: query
        name: wallet_id
        required: false
        schema:
          description: Filter orders by wallet ID
          type: string
        style: form
      - description: Filter orders by currency
        explode: true
        in: query
        name: currency
        required: false
        schema:
          description: Filter orders by currency
          type: string
        style: form
      - description: Order status enum
        explode: true
        in: query
        name: status
        required: false
        schema:
          description: Order status enum
          type: string
          x-enum-varnames:
          - OrderStatusPending
          - OrderStatusPaid
          - OrderStatusFailed
          - OrderStatusExpired
          - OrderStatusCompleted
        style: form
      - description: Page number for pagination, starting from 0
        explode: true
        in: query
        name: page
        required: true
        schema:
          description: Page number for pagination, starting from 0
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: true
        schema:
          description: Number of items per page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page-Order'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: List Orders
      tags:
      - orders
    post:
      description: Create a new payment order
      operationId: v1.orders.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
        description: Order details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create Order
      tags:
      - orders
  /api/v1/orders/{idOrUid}:
    get:
      description: Get order details by ID or UID
      operationId: v1.orders.retrieve
      parameters:
      - description: Order ID or UID
        explode: false
        in: path
        name: idOrUid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Retrieve Order
      tags:
      - orders
  /api/v1/rates:
    post:
      description: Get exchange rates for multiple currency pairs.
      operationId: v1.rates.list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRatesRequest'
        description: Currency pairs to get rates for
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRatesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: List exchange rates
      tags:
      - rates
  /api/v1/rates/estimate:
    get:
      description: Convert an amount from one currency to another using current exchange
        rates.
      operationId: v1.rates.estimate
      parameters:
      - description: Source currency code
        explode: true
        in: query
        name: base_currency
        required: true
        schema:
          description: Source currency code
          minLength: 1
          type: string
        style: form
      - description: Amount in source currency to convert
        explode: true
        in: query
        name: base_amount
        required: true
        schema:
          description: Amount in source currency to convert
          type: string
        style: form
      - description: Target currency code
        explode: true
        in: query
        name: to_currency
        required: true
        schema:
          description: Target currency code
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Estimate currency conversion
      tags:
      - rates
  /api/v1/refunds:
    get:
      description: Retrieve a list of refunds with pagination
      operationId: v1.refunds.list
      parameters:
      - description: Filter refunds by order ID
        explode: true
        in: query
        name: order_id
        required: false
        schema:
          description: Filter refunds by order ID
          type: string
        style: form
      - description: Page number for pagination, starting from 0
        explode: true
        in: query
        name: page
        required: true
        schema:
          description: Page number for pagination, starting from 0
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: true
        schema:
          description: Number of items per page
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page-Refund'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: List Refunds
      tags:
      - refunds
    post:
      description: Create a new refund for an order
      operationId: v1.refunds.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRefundRequest'
        description: Refund details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create Refund
      tags:
      - refunds
  /api/v1/refunds/{idOrUid}:
    get:
      description: Get refund details by ID or UID
      operationId: v1.refunds.retrieve
      parameters:
      - description: Refund ID or UID
        explode: false
        in: path
        name: idOrUid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Retrieve Refund
      tags:
      - refunds
  /api/v1/transfers:
    post:
      description: Transfer funds from merchant wallet to another wallet
      operationId: v1.transfers.transfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequest'
        description: Transfer details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Transfer Funds
      tags:
      - transfers
  /api/v1/webhooks/endpoints:
    get:
      description: Retrieve a list of webhook endpoints with cursor-based pagination
      operationId: v1.webhook-endpoints.list
      parameters:
      - description: The cursor for pagination
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          description: The cursor for pagination
          type: string
        style: form
      - description: The limit of items per page
        explode: true
        in: query
        name: limit
        required: true
        schema:
          description: The limit of items per page
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Endpoint'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: List Webhook Endpoints
      tags:
      - webhook-endpoints
    post:
      description: Create a new webhook endpoint for receiving event notifications
      operationId: v1.webhook-endpoints.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEndpointRequest'
        description: Webhook endpoint details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create Webhook Endpoint
      tags:
      - webhook-endpoints
  /api/v1/webhooks/endpoints/{endpointId}:
    delete:
      description: Delete a webhook endpoint by ID
      operationId: v1.webhook-endpoints.delete
      parameters:
      - description: Webhook endpoint ID
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete Webhook Endpoint
      tags:
      - webhook-endpoints
    get:
      description: Get webhook endpoint details by ID
      operationId: v1.webhook-endpoints.retrieve
      parameters:
      - description: Webhook endpoint ID
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Retrieve Webhook Endpoint
      tags:
      - webhook-endpoints
components:
  schemas:
    CreateEndpointRequest:
      example:
        headers:
          key: headers
        uid: uid
        metadata:
          key: ""
        description: description
        disabled: true
        filter_types:
        - filter_types
        - filter_types
        url: url
      properties:
        description:
          description: The description of the endpoint
          type: string
        disabled:
          description: The disabled status of the endpoint
          type: boolean
        filter_types:
          description: The filter event types of the endpoint
          items:
            type: string
          type: array
          uniqueItems: false
        headers:
          additionalProperties:
            type: string
          description: The headers of the endpoint
          nullable: true
          type: object
        metadata:
          additionalProperties: {}
          description: The metadata of the endpoint
          nullable: true
          type: object
        uid:
          description: The uid of the endpoint
          type: string
        url:
          description: The url of the endpoint
          type: string
      required:
      - filter_types
      - url
      type: object
    CreateOrderRequest:
      example:
        note: note
        uid: uid
        amount: amount
        metadata:
          key: metadata
        user_id: user_id
        currency: currency
        expiration: 0
      properties:
        amount:
          description: Amount, supports decimal values
          type: string
        currency:
          description: 'Currency code. e.g.: USDT, TON, ETH'
          type: string
        expiration:
          description: Expiration time in seconds. If payment is not completed within
            the given time, the order will be automatically canceled
          type: integer
        metadata:
          additionalProperties:
            type: string
          description: Order metadata
          nullable: true
          type: object
        note:
          description: Order description from merchant
          type: string
        uid:
          description: External ID, the order ID in the merchant system
          type: string
        user_id:
          description: ID of the user who needs to make the payment
          type: string
      required:
      - amount
      - currency
      - user_id
      type: object
    CreateRefundRequest:
      example:
        note: note
        uid: uid
        amount: amount
        order_id: order_id
      properties:
        amount:
          description: Amount to refund
          type: string
        note:
          description: Refund description from merchant
          type: string
        order_id:
          description: ID of the order to be refunded
          type: string
        uid:
          description: External ID, the refund ID in the merchant system
          type: string
      required:
      - amount
      - order_id
      type: object
    Currency:
      example:
        symbol: symbol
        code: code
        need_memo: true
        precision: 1
        can_deposit: true
        contract_address: contract_address
        networks:
        - code: code
          need_memo: true
          can_deposit: true
          contract_address: contract_address
          min_fee_for_ct_addr: min_fee_for_ct_addr
          min_withdraw_amount: min_withdraw_amount
          network: network
          max_withdraw_amount: max_withdraw_amount
          min_collect_amount: min_collect_amount
          max_fee_for_ct_addr: max_fee_for_ct_addr
          min_fee: min_fee
          name: name
          can_withdraw: true
          id: id
          can_transfer: true
          min_deposit_amount: min_deposit_amount
          max_fee: max_fee
          min_confirmations: 6
        - code: code
          need_memo: true
          can_deposit: true
          contract_address: contract_address
          min_fee_for_ct_addr: min_fee_for_ct_addr
          min_withdraw_amount: min_withdraw_amount
          network: network
          max_withdraw_amount: max_withdraw_amount
          min_collect_amount: min_collect_amount
          max_fee_for_ct_addr: max_fee_for_ct_addr
          min_fee: min_fee
          name: name
          can_withdraw: true
          id: id
          can_transfer: true
          min_deposit_amount: min_deposit_amount
          max_fee: max_fee
          min_confirmations: 6
        min_fee_for_ct_addr: min_fee_for_ct_addr
        min_withdraw_amount: min_withdraw_amount
        max_withdraw_amount: max_withdraw_amount
        rated: true
        decimals: 0
        max_fee_for_ct_addr: max_fee_for_ct_addr
        min_fee: min_fee
        name: name
        logo: logo
        can_withdraw: true
        can_transfer: true
        min_deposit_amount: min_deposit_amount
        max_fee: max_fee
      properties:
        can_deposit:
          description: Whether on-chain deposits are allowed
          type: boolean
        can_transfer:
          description: Whether internal transfers are allowed
          type: boolean
        can_withdraw:
          description: Whether on-chain withdrawals are allowed
          type: boolean
        code:
          description: Currency code identifier
          type: string
        contract_address:
          description: Contract address
          type: string
        decimals:
          description: Decimal precision
          type: integer
        logo:
          description: Logo URL
          type: string
        max_fee:
          description: Maximum fee
          type: string
        max_fee_for_ct_addr:
          description: Maximum fee for contract address
          type: string
        max_withdraw_amount:
          description: Maximum on-chain withdrawal amount per transaction
          type: string
        min_deposit_amount:
          description: Minimum deposit amount per transaction
          type: string
        min_fee:
          description: Minimum fee
          type: string
        min_fee_for_ct_addr:
          description: Minimum fee for contract address
          type: string
        min_withdraw_amount:
          description: Minimum on-chain withdrawal amount per transaction
          type: string
        name:
          description: Currency name
          type: string
        need_memo:
          description: Whether memo is required
          type: boolean
        networks:
          description: Currency networks information
          items:
            $ref: '#/components/schemas/CurrencyNetwork'
          nullable: true
          type: array
          uniqueItems: false
        precision:
          description: Number of decimal places
          type: integer
        rated:
          description: Whether it participates in exchange rate calculations
          type: boolean
        symbol:
          description: Currency symbol
          type: string
      required:
      - can_deposit
      - can_transfer
      - can_withdraw
      - code
      - decimals
      - logo
      - max_fee
      - max_fee_for_ct_addr
      - max_withdraw_amount
      - min_deposit_amount
      - min_fee
      - min_fee_for_ct_addr
      - min_withdraw_amount
      - name
      - need_memo
      - precision
      - rated
      - symbol
      type: object
    CurrencyNetwork:
      example:
        code: code
        need_memo: true
        can_deposit: true
        contract_address: contract_address
        min_fee_for_ct_addr: min_fee_for_ct_addr
        min_withdraw_amount: min_withdraw_amount
        network: network
        max_withdraw_amount: max_withdraw_amount
        min_collect_amount: min_collect_amount
        max_fee_for_ct_addr: max_fee_for_ct_addr
        min_fee: min_fee
        name: name
        can_withdraw: true
        id: id
        can_transfer: true
        min_deposit_amount: min_deposit_amount
        max_fee: max_fee
        min_confirmations: 6
      properties:
        can_deposit:
          description: Whether deposits are enabled for this network
          type: boolean
        can_transfer:
          description: Whether transfers are enabled for this network
          type: boolean
        can_withdraw:
          description: Whether withdrawals are enabled for this network
          type: boolean
        code:
          description: Associated with Currency by code
          type: string
        contract_address:
          description: Smart contract address for token (if applicable)
          type: string
        id:
          description: Unique identifier for the currency network
          type: string
        max_fee:
          description: Maximum transaction fee
          type: string
        max_fee_for_ct_addr:
          description: Maximum fee for contract address transactions
          type: string
        max_withdraw_amount:
          description: Maximum on-chain withdrawal amount per transaction
          type: string
        min_collect_amount:
          description: Minimum collection amount
          type: string
        min_confirmations:
          description: Required number of confirmations for transactions
          type: integer
        min_deposit_amount:
          description: Minimum deposit amount per transaction
          type: string
        min_fee:
          description: Minimum transaction fee
          type: string
        min_fee_for_ct_addr:
          description: Minimum fee for contract address transactions
          type: string
        min_withdraw_amount:
          description: Minimum on-chain withdrawal amount per transaction
          type: string
        name:
          description: Display name of the network
          type: string
        need_memo:
          description: Whether memo/tag is required for transactions
          type: boolean
        network:
          description: Network identifier (e.g., ETH, BTC)
          type: string
      required:
      - can_deposit
      - can_transfer
      - can_withdraw
      - code
      - id
      - max_fee
      - max_fee_for_ct_addr
      - max_withdraw_amount
      - min_confirmations
      - min_deposit_amount
      - min_fee
      - min_fee_for_ct_addr
      - min_withdraw_amount
      - name
      - need_memo
      - network
      type: object
    CurrencyPair:
      description: Currency pair for this rate
      example:
        base_currency: base_currency
        to_currency: to_currency
      properties:
        base_currency:
          description: Source currency code
          maxLength: 100
          minLength: 1
          type: string
        to_currency:
          description: Target currency code
          maxLength: 100
          minLength: 1
          type: string
      required:
      - base_currency
      - to_currency
      type: object
    CursorPage-Currency:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        has_next: true
        items:
        - symbol: symbol
          code: code
          need_memo: true
          precision: 1
          can_deposit: true
          contract_address: contract_address
          networks:
          - code: code
            need_memo: true
            can_deposit: true
            contract_address: contract_address
            min_fee_for_ct_addr: min_fee_for_ct_addr
            min_withdraw_amount: min_withdraw_amount
            network: network
            max_withdraw_amount: max_withdraw_amount
            min_collect_amount: min_collect_amount
            max_fee_for_ct_addr: max_fee_for_ct_addr
            min_fee: min_fee
            name: name
            can_withdraw: true
            id: id
            can_transfer: true
            min_deposit_amount: min_deposit_amount
            max_fee: max_fee
            min_confirmations: 6
          - code: code
            need_memo: true
            can_deposit: true
            contract_address: contract_address
            min_fee_for_ct_addr: min_fee_for_ct_addr
            min_withdraw_amount: min_withdraw_amount
            network: network
            max_withdraw_amount: max_withdraw_amount
            min_collect_amount: min_collect_amount
            max_fee_for_ct_addr: max_fee_for_ct_addr
            min_fee: min_fee
            name: name
            can_withdraw: true
            id: id
            can_transfer: true
            min_deposit_amount: min_deposit_amount
            max_fee: max_fee
            min_confirmations: 6
          min_fee_for_ct_addr: min_fee_for_ct_addr
          min_withdraw_amount: min_withdraw_amount
          max_withdraw_amount: max_withdraw_amount
          rated: true
          decimals: 0
          max_fee_for_ct_addr: max_fee_for_ct_addr
          min_fee: min_fee
          name: name
          logo: logo
          can_withdraw: true
          can_transfer: true
          min_deposit_amount: min_deposit_amount
          max_fee: max_fee
        - symbol: symbol
          code: code
          need_memo: true
          precision: 1
          can_deposit: true
          contract_address: contract_address
          networks:
          - code: code
            need_memo: true
            can_deposit: true
            contract_address: contract_address
            min_fee_for_ct_addr: min_fee_for_ct_addr
            min_withdraw_amount: min_withdraw_amount
            network: network
            max_withdraw_amount: max_withdraw_amount
            min_collect_amount: min_collect_amount
            max_fee_for_ct_addr: max_fee_for_ct_addr
            min_fee: min_fee
            name: name
            can_withdraw: true
            id: id
            can_transfer: true
            min_deposit_amount: min_deposit_amount
            max_fee: max_fee
            min_confirmations: 6
          - code: code
            need_memo: true
            can_deposit: true
            contract_address: contract_address
            min_fee_for_ct_addr: min_fee_for_ct_addr
            min_withdraw_amount: min_withdraw_amount
            network: network
            max_withdraw_amount: max_withdraw_amount
            min_collect_amount: min_collect_amount
            max_fee_for_ct_addr: max_fee_for_ct_addr
            min_fee: min_fee
            name: name
            can_withdraw: true
            id: id
            can_transfer: true
            min_deposit_amount: min_deposit_amount
            max_fee: max_fee
            min_confirmations: 6
          min_fee_for_ct_addr: min_fee_for_ct_addr
          min_withdraw_amount: min_withdraw_amount
          max_withdraw_amount: max_withdraw_amount
          rated: true
          decimals: 0
          max_fee_for_ct_addr: max_fee_for_ct_addr
          min_fee: min_fee
          name: name
          logo: logo
          can_withdraw: true
          can_transfer: true
          min_deposit_amount: min_deposit_amount
          max_fee: max_fee
      properties:
        has_next:
          description: Whether there are more items available in the next page
          type: boolean
        items:
          description: List of items in the current page
          items:
            $ref: '#/components/schemas/Currency'
          type: array
          uniqueItems: false
        next_cursor:
          description: Cursor for fetching the next page of items
          type: string
        prev_cursor:
          description: Cursor for fetching the previous page of items
          type: string
      required:
      - has_next
      - items
      type: object
    CursorPage-Endpoint:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        has_next: true
        items:
        - headers:
            key: headers
          uid: uid
          metadata:
            key: ""
          created_at: created_at
          description: description
          disabled: true
          filter_types:
          - filter_types
          - filter_types
          id: id
          url: url
        - headers:
            key: headers
          uid: uid
          metadata:
            key: ""
          created_at: created_at
          description: description
          disabled: true
          filter_types:
          - filter_types
          - filter_types
          id: id
          url: url
      properties:
        has_next:
          description: Whether there are more items available in the next page
          type: boolean
        items:
          description: List of items in the current page
          items:
            $ref: '#/components/schemas/Endpoint'
          type: array
          uniqueItems: false
        next_cursor:
          description: Cursor for fetching the next page of items
          type: string
        prev_cursor:
          description: Cursor for fetching the previous page of items
          type: string
      required:
      - has_next
      - items
      type: object
    Endpoint:
      example:
        headers:
          key: headers
        uid: uid
        metadata:
          key: ""
        created_at: created_at
        description: description
        disabled: true
        filter_types:
        - filter_types
        - filter_types
        id: id
        url: url
      properties:
        created_at:
          description: The creation time of the endpoint
          type: string
        description:
          description: The description of the endpoint
          type: string
        disabled:
          description: The disabled status of the endpoint
          type: boolean
        filter_types:
          description: The filter event types of the endpoint
          items:
            type: string
          type: array
          uniqueItems: false
        headers:
          additionalProperties:
            type: string
          description: The headers of the endpoint
          nullable: true
          type: object
        id:
          description: The id of the endpoint
          type: string
        metadata:
          additionalProperties: {}
          description: The metadata of the endpoint
          nullable: true
          type: object
        uid:
          description: The uid of the endpoint
          type: string
        url:
          description: The url of the endpoint
          type: string
      required:
      - created_at
      - description
      - filter_types
      - id
      - url
      type: object
    Error:
      properties:
        code:
          description: Error code for the specific error
          type: integer
        msg:
          description: Human-readable error message
          type: string
      required:
      - code
      - msg
      type: object
    EstimateResponse:
      example:
        base_currency: base_currency
        to_amount: to_amount
        rate: 0.8008281904610115
        base_amount: base_amount
        to_currency: to_currency
      properties:
        base_amount:
          description: Amount in source currency
          type: string
        base_currency:
          description: Source currency code
          type: string
        rate:
          description: Exchange rate used for conversion
          type: number
        to_amount:
          description: Converted amount in target currency
          type: string
        to_currency:
          description: Target currency code
          type: string
      required:
      - base_amount
      - base_currency
      - rate
      - to_amount
      - to_currency
      type: object
    GetRatesRequest:
      example:
        pairs:
        - base_currency: base_currency
          to_currency: to_currency
        - base_currency: base_currency
          to_currency: to_currency
        - base_currency: base_currency
          to_currency: to_currency
        - base_currency: base_currency
          to_currency: to_currency
        - base_currency: base_currency
          to_currency: to_currency
      properties:
        pairs:
          description: List of currency pairs to get rates for
          items:
            $ref: '#/components/schemas/CurrencyPair'
          maxItems: 100
          minItems: 1
          type: array
          uniqueItems: false
      required:
      - pairs
      type: object
    GetRatesResponse:
      example:
        rates:
        - rate: 0.8008281904610115
          pair:
            base_currency: base_currency
            to_currency: to_currency
        - rate: 0.8008281904610115
          pair:
            base_currency: base_currency
            to_currency: to_currency
      properties:
        rates:
          description: List of exchange rates for requested currency pairs
          items:
            $ref: '#/components/schemas/Rate'
          type: array
          uniqueItems: false
      required:
      - rates
      type: object
    Order:
      example:
        note: note
        amount: amount
        metadata:
          key: metadata
        created_at: created_at
        expired_at: expired_at
        failed_message: failed_message
        paid_at: paid_at
        uid: uid
        wallet_id: wallet_id
        user_id: user_id
        currency: currency
        expiration: 0
        failed_at: failed_at
        id: id
        status: status
      properties:
        amount:
          description: Amount
          type: string
        created_at:
          description: Order creation time
          type: string
        currency:
          description: Currency symbol
          type: string
        expiration:
          description: Expiration time in seconds. If payment is not completed within
            the given time, the order will be automatically canceled
          type: integer
        expired_at:
          description: Order expiration time
          type: string
        failed_at:
          description: Order failure time
          type: string
        failed_message:
          description: Error message when order fails
          type: string
        id:
          description: System unique ID of the order
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Order metadata
          nullable: true
          type: object
        note:
          description: Order description from merchant
          type: string
        paid_at:
          description: Order payment time
          type: string
        status:
          description: Order status enum
          type: string
          x-enum-varnames:
          - OrderStatusPending
          - OrderStatusPaid
          - OrderStatusFailed
          - OrderStatusExpired
          - OrderStatusCompleted
        uid:
          description: External ID, the order ID in the merchant system
          type: string
        user_id:
          description: ID of the user who made the payment
          type: string
        wallet_id:
          description: ID of the wallet used for payment
          type: string
      required:
      - amount
      - created_at
      - currency
      - expiration
      - id
      - note
      - status
      - wallet_id
      type: object
    OrderStatus:
      description: Order status enum
      type: string
      x-enum-varnames:
      - OrderStatusPending
      - OrderStatusPaid
      - OrderStatusFailed
      - OrderStatusExpired
      - OrderStatusCompleted
    Page-Order:
      example:
        total: 6
        items:
        - note: note
          amount: amount
          metadata:
            key: metadata
          created_at: created_at
          expired_at: expired_at
          failed_message: failed_message
          paid_at: paid_at
          uid: uid
          wallet_id: wallet_id
          user_id: user_id
          currency: currency
          expiration: 0
          failed_at: failed_at
          id: id
          status: status
        - note: note
          amount: amount
          metadata:
            key: metadata
          created_at: created_at
          expired_at: expired_at
          failed_message: failed_message
          paid_at: paid_at
          uid: uid
          wallet_id: wallet_id
          user_id: user_id
          currency: currency
          expiration: 0
          failed_at: failed_at
          id: id
          status: status
      properties:
        items:
          description: List of items in the current page
          items:
            $ref: '#/components/schemas/Order'
          type: array
          uniqueItems: false
        total:
          description: Total number of items across all pages
          type: integer
      required:
      - items
      - total
      type: object
    Page-Refund:
      example:
        total: 0
        items:
        - completed_at: completed_at
          note: note
          uid: uid
          amount: amount
          created_at: created_at
          currency: currency
          failed_at: failed_at
          id: id
          order_id: order_id
          failed_message: failed_message
          status: status
        - completed_at: completed_at
          note: note
          uid: uid
          amount: amount
          created_at: created_at
          currency: currency
          failed_at: failed_at
          id: id
          order_id: order_id
          failed_message: failed_message
          status: status
      properties:
        items:
          description: List of items in the current page
          items:
            $ref: '#/components/schemas/Refund'
          type: array
          uniqueItems: false
        total:
          description: Total number of items across all pages
          type: integer
      required:
      - items
      - total
      type: object
    Rate:
      example:
        rate: 0.8008281904610115
        pair:
          base_currency: base_currency
          to_currency: to_currency
      properties:
        pair:
          $ref: '#/components/schemas/CurrencyPair'
        rate:
          description: Exchange rate value
          type: number
      required:
      - rate
      type: object
    Refund:
      example:
        completed_at: completed_at
        note: note
        uid: uid
        amount: amount
        created_at: created_at
        currency: currency
        failed_at: failed_at
        id: id
        order_id: order_id
        failed_message: failed_message
        status: status
      properties:
        amount:
          description: Amount being refunded
          type: string
        completed_at:
          description: Time when the refund was completed
          type: string
        created_at:
          description: Time when the refund was created
          type: string
        currency:
          description: Currency code of the refund
          type: string
        failed_at:
          description: Time when the refund failed
          type: string
        failed_message:
          description: Error message when refund fails
          type: string
        id:
          description: System unique ID of the refund
          type: string
        note:
          description: Refund description from merchant
          type: string
        order_id:
          description: ID of the order being refunded
          type: string
        status:
          description: The status of the refund
          type: string
          x-enum-varnames:
          - RefundStatusPending
          - RefundStatusFailed
          - RefundStatusCompleted
        uid:
          description: External ID, the refund ID in the merchant system
          type: string
      required:
      - amount
      - created_at
      - currency
      - id
      - order_id
      - status
      type: object
    RefundStatus:
      description: The status of the refund
      type: string
      x-enum-varnames:
      - RefundStatusPending
      - RefundStatusFailed
      - RefundStatusCompleted
    TransferRequest:
      example:
        to_wallet_id: to_wallet_id
        amount: amount
        description: description
        currency: currency
        auto_commit: true
        tags:
        - tags
        - tags
      properties:
        amount:
          description: Amount to transfer, supports decimal values
          type: string
        auto_commit:
          description: Whether to automatically commit the transfer
          type: boolean
        currency:
          description: Currency code for the transfer (e.g., TON, USDT, ETH)
          type: string
        description:
          description: Optional description for the transfer
          type: string
        tags:
          description: Optional tags for categorizing the transfer
          items:
            type: string
          nullable: true
          type: array
          uniqueItems: false
        to_wallet_id:
          description: Destination wallet ID to transfer funds to
          type: string
      required:
      - amount
      - currency
      - to_wallet_id
      type: object
    TransferResponse:
      example:
        transfer_id: transfer_id
      properties:
        transfer_id:
          description: Unique identifier for the created transfer
          type: string
      required:
      - transfer_id
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-Api-Key
      type: apiKey
