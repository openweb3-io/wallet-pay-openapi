/*
 * Wallet-Pay API Documentations
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// HttpErrorOut struct for HttpErrorOut
type HttpErrorOut struct {
	Msg string `json:"msg"`
	Code NullableInt32 `json:"code,omitempty"`
}

// NewHttpErrorOut instantiates a new HttpErrorOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpErrorOut(msg string) *HttpErrorOut {
	this := HttpErrorOut{}
	this.Msg = msg
	return &this
}

// NewHttpErrorOutWithDefaults instantiates a new HttpErrorOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpErrorOutWithDefaults() *HttpErrorOut {
	this := HttpErrorOut{}
	return &this
}

// GetMsg returns the Msg field value
func (o *HttpErrorOut) GetMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
func (o *HttpErrorOut) GetMsgOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *HttpErrorOut) SetMsg(v string) {
	o.Msg = v
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HttpErrorOut) GetCode() int32 {
	if o == nil || o.Code.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HttpErrorOut) GetCodeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *HttpErrorOut) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableInt32 and assigns it to the Code field.
func (o *HttpErrorOut) SetCode(v int32) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *HttpErrorOut) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *HttpErrorOut) UnsetCode() {
	o.Code.Unset()
}

func (o HttpErrorOut) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["msg"] = o.Msg
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableHttpErrorOut struct {
	value *HttpErrorOut
	isSet bool
}

func (v NullableHttpErrorOut) Get() *HttpErrorOut {
	return v.value
}

func (v *NullableHttpErrorOut) Set(val *HttpErrorOut) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpErrorOut) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpErrorOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpErrorOut(val *HttpErrorOut) *NullableHttpErrorOut {
	return &NullableHttpErrorOut{value: val, isSet: true}
}

func (v NullableHttpErrorOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpErrorOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


