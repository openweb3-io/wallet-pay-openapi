/*
 * Wallet-Pay API Documentations
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RateData struct for RateData
type RateData struct {
	Pair CurrencyPair `json:"pair"`
	// The current exchange rate for the specified pair
	Rate float32 `json:"rate"`
}

// NewRateData instantiates a new RateData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRateData(pair CurrencyPair, rate float32) *RateData {
	this := RateData{}
	this.Pair = pair
	this.Rate = rate
	return &this
}

// NewRateDataWithDefaults instantiates a new RateData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRateDataWithDefaults() *RateData {
	this := RateData{}
	return &this
}

// GetPair returns the Pair field value
func (o *RateData) GetPair() CurrencyPair {
	if o == nil {
		var ret CurrencyPair
		return ret
	}

	return o.Pair
}

// GetPairOk returns a tuple with the Pair field value
// and a boolean to check if the value has been set.
func (o *RateData) GetPairOk() (*CurrencyPair, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Pair, true
}

// SetPair sets field value
func (o *RateData) SetPair(v CurrencyPair) {
	o.Pair = v
}

// GetRate returns the Rate field value
func (o *RateData) GetRate() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Rate
}

// GetRateOk returns a tuple with the Rate field value
// and a boolean to check if the value has been set.
func (o *RateData) GetRateOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Rate, true
}

// SetRate sets field value
func (o *RateData) SetRate(v float32) {
	o.Rate = v
}

func (o RateData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pair"] = o.Pair
	}
	if true {
		toSerialize["rate"] = o.Rate
	}
	return json.Marshal(toSerialize)
}

type NullableRateData struct {
	value *RateData
	isSet bool
}

func (v NullableRateData) Get() *RateData {
	return v.value
}

func (v *NullableRateData) Set(val *RateData) {
	v.value = val
	v.isSet = true
}

func (v NullableRateData) IsSet() bool {
	return v.isSet
}

func (v *NullableRateData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRateData(val *RateData) *NullableRateData {
	return &NullableRateData{value: val, isSet: true}
}

func (v NullableRateData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRateData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


