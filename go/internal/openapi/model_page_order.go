/*
 * WalletPay API Documentation
 *
 * This is a custody wallet pay service openapi server.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PageOrder struct for PageOrder
type PageOrder struct {
	// List of items in the current page
	Items []Order `json:"items"`
	// Total number of items across all pages
	Total int32 `json:"total"`
}

// NewPageOrder instantiates a new PageOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageOrder(items []Order, total int32) *PageOrder {
	this := PageOrder{}
	this.Items = items
	this.Total = total
	return &this
}

// NewPageOrderWithDefaults instantiates a new PageOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageOrderWithDefaults() *PageOrder {
	this := PageOrder{}
	return &this
}

// GetItems returns the Items field value
func (o *PageOrder) GetItems() []Order {
	if o == nil {
		var ret []Order
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *PageOrder) GetItemsOk() (*[]Order, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Items, true
}

// SetItems sets field value
func (o *PageOrder) SetItems(v []Order) {
	o.Items = v
}

// GetTotal returns the Total field value
func (o *PageOrder) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *PageOrder) GetTotalOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *PageOrder) SetTotal(v int32) {
	o.Total = v
}

func (o PageOrder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["items"] = o.Items
	}
	if true {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullablePageOrder struct {
	value *PageOrder
	isSet bool
}

func (v NullablePageOrder) Get() *PageOrder {
	return v.value
}

func (v *NullablePageOrder) Set(val *PageOrder) {
	v.value = val
	v.isSet = true
}

func (v NullablePageOrder) IsSet() bool {
	return v.isSet
}

func (v *NullablePageOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageOrder(val *PageOrder) *NullablePageOrder {
	return &NullablePageOrder{value: val, isSet: true}
}

func (v NullablePageOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


