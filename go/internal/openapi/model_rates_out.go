/*
 * Wallet-Pay API Documentations
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RatesOut struct for RatesOut
type RatesOut struct {
	Rates []RateData `json:"rates"`
}

// NewRatesOut instantiates a new RatesOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRatesOut(rates []RateData) *RatesOut {
	this := RatesOut{}
	this.Rates = rates
	return &this
}

// NewRatesOutWithDefaults instantiates a new RatesOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRatesOutWithDefaults() *RatesOut {
	this := RatesOut{}
	return &this
}

// GetRates returns the Rates field value
func (o *RatesOut) GetRates() []RateData {
	if o == nil {
		var ret []RateData
		return ret
	}

	return o.Rates
}

// GetRatesOk returns a tuple with the Rates field value
// and a boolean to check if the value has been set.
func (o *RatesOut) GetRatesOk() (*[]RateData, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Rates, true
}

// SetRates sets field value
func (o *RatesOut) SetRates(v []RateData) {
	o.Rates = v
}

func (o RatesOut) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["rates"] = o.Rates
	}
	return json.Marshal(toSerialize)
}

type NullableRatesOut struct {
	value *RatesOut
	isSet bool
}

func (v NullableRatesOut) Get() *RatesOut {
	return v.value
}

func (v *NullableRatesOut) Set(val *RatesOut) {
	v.value = val
	v.isSet = true
}

func (v NullableRatesOut) IsSet() bool {
	return v.isSet
}

func (v *NullableRatesOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRatesOut(val *RatesOut) *NullableRatesOut {
	return &NullableRatesOut{value: val, isSet: true}
}

func (v NullableRatesOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRatesOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


