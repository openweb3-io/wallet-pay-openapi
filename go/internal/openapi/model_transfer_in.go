/*
 * Wallet-Pay API Documentations
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TransferIn struct for TransferIn
type TransferIn struct {
	// the target wallet id
	ToWalletId string `json:"to_wallet_id"`
	// currency code
	Currency string `json:"currency"`
	// big integer string representation
	Amount string `json:"amount"`
	// auto commit, default is true
	AutoCommit *bool `json:"auto_commit,omitempty"`
	// transfer description
	Description *string `json:"description,omitempty"`
	// transfer tags
	Tags []string `json:"tags,omitempty"`
}

// NewTransferIn instantiates a new TransferIn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferIn(toWalletId string, currency string, amount string) *TransferIn {
	this := TransferIn{}
	this.ToWalletId = toWalletId
	this.Currency = currency
	this.Amount = amount
	return &this
}

// NewTransferInWithDefaults instantiates a new TransferIn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferInWithDefaults() *TransferIn {
	this := TransferIn{}
	return &this
}

// GetToWalletId returns the ToWalletId field value
func (o *TransferIn) GetToWalletId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToWalletId
}

// GetToWalletIdOk returns a tuple with the ToWalletId field value
// and a boolean to check if the value has been set.
func (o *TransferIn) GetToWalletIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ToWalletId, true
}

// SetToWalletId sets field value
func (o *TransferIn) SetToWalletId(v string) {
	o.ToWalletId = v
}

// GetCurrency returns the Currency field value
func (o *TransferIn) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *TransferIn) GetCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *TransferIn) SetCurrency(v string) {
	o.Currency = v
}

// GetAmount returns the Amount field value
func (o *TransferIn) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *TransferIn) GetAmountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *TransferIn) SetAmount(v string) {
	o.Amount = v
}

// GetAutoCommit returns the AutoCommit field value if set, zero value otherwise.
func (o *TransferIn) GetAutoCommit() bool {
	if o == nil || o.AutoCommit == nil {
		var ret bool
		return ret
	}
	return *o.AutoCommit
}

// GetAutoCommitOk returns a tuple with the AutoCommit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferIn) GetAutoCommitOk() (*bool, bool) {
	if o == nil || o.AutoCommit == nil {
		return nil, false
	}
	return o.AutoCommit, true
}

// HasAutoCommit returns a boolean if a field has been set.
func (o *TransferIn) HasAutoCommit() bool {
	if o != nil && o.AutoCommit != nil {
		return true
	}

	return false
}

// SetAutoCommit gets a reference to the given bool and assigns it to the AutoCommit field.
func (o *TransferIn) SetAutoCommit(v bool) {
	o.AutoCommit = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TransferIn) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferIn) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TransferIn) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TransferIn) SetDescription(v string) {
	o.Description = &v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferIn) GetTags() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferIn) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return &o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *TransferIn) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *TransferIn) SetTags(v []string) {
	o.Tags = v
}

func (o TransferIn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["to_wallet_id"] = o.ToWalletId
	}
	if true {
		toSerialize["currency"] = o.Currency
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if o.AutoCommit != nil {
		toSerialize["auto_commit"] = o.AutoCommit
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableTransferIn struct {
	value *TransferIn
	isSet bool
}

func (v NullableTransferIn) Get() *TransferIn {
	return v.value
}

func (v *NullableTransferIn) Set(val *TransferIn) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferIn) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferIn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferIn(val *TransferIn) *NullableTransferIn {
	return &NullableTransferIn{value: val, isSet: true}
}

func (v NullableTransferIn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferIn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


