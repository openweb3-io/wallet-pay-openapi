/*
 * Wallet-Pay API Documentations
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResponseError struct for ResponseError
type ResponseError struct {
	Msg string `json:"msg"`
	Code int32 `json:"code"`
}

// NewResponseError instantiates a new ResponseError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseError(msg string, code int32) *ResponseError {
	this := ResponseError{}
	this.Msg = msg
	this.Code = code
	return &this
}

// NewResponseErrorWithDefaults instantiates a new ResponseError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseErrorWithDefaults() *ResponseError {
	this := ResponseError{}
	return &this
}

// GetMsg returns the Msg field value
func (o *ResponseError) GetMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
func (o *ResponseError) GetMsgOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *ResponseError) SetMsg(v string) {
	o.Msg = v
}

// GetCode returns the Code field value
func (o *ResponseError) GetCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ResponseError) GetCodeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ResponseError) SetCode(v int32) {
	o.Code = v
}

func (o ResponseError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["msg"] = o.Msg
	}
	if true {
		toSerialize["code"] = o.Code
	}
	return json.Marshal(toSerialize)
}

type NullableResponseError struct {
	value *ResponseError
	isSet bool
}

func (v NullableResponseError) Get() *ResponseError {
	return v.value
}

func (v *NullableResponseError) Set(val *ResponseError) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseError) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseError(val *ResponseError) *NullableResponseError {
	return &NullableResponseError{value: val, isSet: true}
}

func (v NullableResponseError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


