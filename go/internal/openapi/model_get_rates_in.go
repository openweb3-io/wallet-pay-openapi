/*
 * Wallet-Pay API Documentations
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetRatesIn struct for GetRatesIn
type GetRatesIn struct {
	Pairs []CurrencyPair `json:"pairs"`
}

// NewGetRatesIn instantiates a new GetRatesIn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRatesIn(pairs []CurrencyPair) *GetRatesIn {
	this := GetRatesIn{}
	this.Pairs = pairs
	return &this
}

// NewGetRatesInWithDefaults instantiates a new GetRatesIn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRatesInWithDefaults() *GetRatesIn {
	this := GetRatesIn{}
	return &this
}

// GetPairs returns the Pairs field value
func (o *GetRatesIn) GetPairs() []CurrencyPair {
	if o == nil {
		var ret []CurrencyPair
		return ret
	}

	return o.Pairs
}

// GetPairsOk returns a tuple with the Pairs field value
// and a boolean to check if the value has been set.
func (o *GetRatesIn) GetPairsOk() (*[]CurrencyPair, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Pairs, true
}

// SetPairs sets field value
func (o *GetRatesIn) SetPairs(v []CurrencyPair) {
	o.Pairs = v
}

func (o GetRatesIn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pairs"] = o.Pairs
	}
	return json.Marshal(toSerialize)
}

type NullableGetRatesIn struct {
	value *GetRatesIn
	isSet bool
}

func (v NullableGetRatesIn) Get() *GetRatesIn {
	return v.value
}

func (v *NullableGetRatesIn) Set(val *GetRatesIn) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRatesIn) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRatesIn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRatesIn(val *GetRatesIn) *NullableGetRatesIn {
	return &NullableGetRatesIn{value: val, isSet: true}
}

func (v NullableGetRatesIn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRatesIn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


