/*
 * Wallet-Pay API Documentations
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResponseListRefundOut struct for ResponseListRefundOut
type ResponseListRefundOut struct {
	Data ListResponseRefundOut `json:"data"`
}

// NewResponseListRefundOut instantiates a new ResponseListRefundOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseListRefundOut(data ListResponseRefundOut) *ResponseListRefundOut {
	this := ResponseListRefundOut{}
	this.Data = data
	return &this
}

// NewResponseListRefundOutWithDefaults instantiates a new ResponseListRefundOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseListRefundOutWithDefaults() *ResponseListRefundOut {
	this := ResponseListRefundOut{}
	return &this
}

// GetData returns the Data field value
func (o *ResponseListRefundOut) GetData() ListResponseRefundOut {
	if o == nil {
		var ret ListResponseRefundOut
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ResponseListRefundOut) GetDataOk() (*ListResponseRefundOut, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ResponseListRefundOut) SetData(v ListResponseRefundOut) {
	o.Data = v
}

func (o ResponseListRefundOut) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableResponseListRefundOut struct {
	value *ResponseListRefundOut
	isSet bool
}

func (v NullableResponseListRefundOut) Get() *ResponseListRefundOut {
	return v.value
}

func (v *NullableResponseListRefundOut) Set(val *ResponseListRefundOut) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseListRefundOut) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseListRefundOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseListRefundOut(val *ResponseListRefundOut) *NullableResponseListRefundOut {
	return &NullableResponseListRefundOut{value: val, isSet: true}
}

func (v NullableResponseListRefundOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseListRefundOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


